// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$btn-arrow-exchange-name: 'btn-arrow-exchange';
$btn-arrow-exchange-x: 0px;
$btn-arrow-exchange-y: 0px;
$btn-arrow-exchange-offset-x: 0px;
$btn-arrow-exchange-offset-y: 0px;
$btn-arrow-exchange-width: 32px;
$btn-arrow-exchange-height: 32px;
$btn-arrow-exchange-total-width: 114px;
$btn-arrow-exchange-total-height: 501px;
$btn-arrow-exchange-image: '../../assets/images/icons.png';
$btn-arrow-exchange: (0px, 0px, 0px, 0px, 32px, 32px, 114px, 501px, '../../assets/images/icons.png', 'btn-arrow-exchange', );
$consumption-balance-name: 'consumption-balance';
$consumption-balance-x: 0px;
$consumption-balance-y: 270px;
$consumption-balance-offset-x: 0px;
$consumption-balance-offset-y: -270px;
$consumption-balance-width: 111px;
$consumption-balance-height: 70px;
$consumption-balance-total-width: 114px;
$consumption-balance-total-height: 501px;
$consumption-balance-image: '../../assets/images/icons.png';
$consumption-balance: (0px, 270px, 0px, -270px, 111px, 70px, 114px, 501px, '../../assets/images/icons.png', 'consumption-balance', );
$cooperation-name: 'cooperation';
$cooperation-x: 0px;
$cooperation-y: 192px;
$cooperation-offset-x: 0px;
$cooperation-offset-y: -192px;
$cooperation-width: 114px;
$cooperation-height: 68px;
$cooperation-total-width: 114px;
$cooperation-total-height: 501px;
$cooperation-image: '../../assets/images/icons.png';
$cooperation: (0px, 192px, 0px, -192px, 114px, 68px, 114px, 501px, '../../assets/images/icons.png', 'cooperation', );
$exchange-name: 'exchange';
$exchange-x: 0px;
$exchange-y: 350px;
$exchange-offset-x: 0px;
$exchange-offset-y: -350px;
$exchange-width: 105px;
$exchange-height: 70px;
$exchange-total-width: 114px;
$exchange-total-height: 501px;
$exchange-image: '../../assets/images/icons.png';
$exchange: (0px, 350px, 0px, -350px, 105px, 70px, 114px, 501px, '../../assets/images/icons.png', 'exchange', );
$favorite-goods-name: 'favorite-goods';
$favorite-goods-x: 0px;
$favorite-goods-y: 116px;
$favorite-goods-offset-x: 0px;
$favorite-goods-offset-y: -116px;
$favorite-goods-width: 112px;
$favorite-goods-height: 66px;
$favorite-goods-total-width: 114px;
$favorite-goods-total-height: 501px;
$favorite-goods-image: '../../assets/images/icons.png';
$favorite-goods: (0px, 116px, 0px, -116px, 112px, 66px, 114px, 501px, '../../assets/images/icons.png', 'favorite-goods', );
$get-balance-name: 'get-balance';
$get-balance-x: 0px;
$get-balance-y: 430px;
$get-balance-offset-x: 0px;
$get-balance-offset-y: -430px;
$get-balance-width: 111px;
$get-balance-height: 71px;
$get-balance-total-width: 114px;
$get-balance-total-height: 501px;
$get-balance-image: '../../assets/images/icons.png';
$get-balance: (0px, 430px, 0px, -430px, 111px, 71px, 114px, 501px, '../../assets/images/icons.png', 'get-balance', );
$steam-login-name: 'steam-login';
$steam-login-x: 0px;
$steam-login-y: 42px;
$steam-login-offset-x: 0px;
$steam-login-offset-y: -42px;
$steam-login-width: 113px;
$steam-login-height: 64px;
$steam-login-total-width: 114px;
$steam-login-total-height: 501px;
$steam-login-image: '../../assets/images/icons.png';
$steam-login: (0px, 42px, 0px, -42px, 113px, 64px, 114px, 501px, '../../assets/images/icons.png', 'steam-login', );
$spritesheet-width: 114px;
$spritesheet-height: 501px;
$spritesheet-image: '../../assets/images/icons.png';
$spritesheet-sprites: ($btn-arrow-exchange, $consumption-balance, $cooperation, $exchange, $favorite-goods, $get-balance, $steam-login, );
$spritesheet: (114px, 501px, '../../assets/images/icons.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
